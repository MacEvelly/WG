{"version":3,"sources":["data/MotionVars.js","components/ScreenChoice.jsx","components/Buttons.jsx","components/ScreenDesign.jsx","App.js","index.js"],"names":["overlayMotion","initial","animate","exit","variants","out","opacity","transition","duration","in","ScreenChoice","i","displayProducts","Object","keys","products","map","key","sku","title","introImg","folder","linkTo","test","to","src","alt","section","className","makePNG","printCanvas","document","getElementsByClassName","time","Date","valueOf","pngName","html2canvas","scale","dpi","timeout","allowTaint","backgroundColor","letterRendering","height","offsetHeight","width","offsetWidth","then","canvas","file","toDataURL","download","createElement","href","click","catch","error","console","log","BtnMakePdf","onClick","BtnBack","CheckBox","name","useState","Checked","setChecked","type","checked","onChange","designs","querySelectorAll","style","display","ScreenDesign","match","chosen","find","x","params","overlay","background","id","fonts","colors","designDiv","nameInput","setNameInput","currDesign","setCurrDesign","currSize","setCurrSize","currScale","currFont","setCurrFont","currColor","setCurrColor","design","data-html2canvas-ignore","fontFamily","fontSize","color","transform","e","value","target","min","max","f","fileName","App","clear","location","useLocation","exitBeforeEnter","component","path","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ef57656a.chunk.js","sourcesContent":["export const avatarTransition = {\n  in: { opacity: 1, x: -5, transition: { delay: 0.9 } },\n  out: { opacity: 0, x: -50, transition: { delay: 0.25 } },\n};\nexport const avatarMotion = {\n  initial: \"out\",\n  animate: \"in\",\n  exit: \"out\",\n  variants: avatarTransition,\n};\n\nexport const textTransition = {\n  out: { scale: 0.75, opacity: 0 },\n  in: { scale: 1, opacity: 1, transition: { delay: 0.7 } },\n};\nexport const textMotion = {\n  initial: \"out\",\n  animate: \"in\",\n  exit: \"out\",\n  variants: textTransition,\n};\n\nexport const videoTransition = {\n  out: { opacity: 0, transition: { duration: 0.3 } },\n  in: { opacity: 1, transition: { duration: 0.3 } },\n};\nexport const videoMotion = {\n  initial: \"out\",\n  animate: \"in\",\n  exit: \"out\",\n  variants: videoTransition,\n};\n\n\nexport const overlayTransition = {\n  out: { opacity: 0, transition: { duration: 0.3 } },\n  in: { opacity: 1, transition: { duration: 0.3 } },\n};\n\nexport const overlayMotion = {\n  initial: \"out\",\n  animate: \"in\",\n  exit: \"out\",\n  variants: overlayTransition,\n};","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Link } from \"react-router-dom\";\nimport { overlayMotion } from \"../data/MotionVars\";\nimport products from \"../data/products\";\n\nfunction ScreenChoice() {\n  let i = 0;\n  const displayProducts = Object.keys(products).map((key) => {\n    const { sku, title, introImg, folder } = products[key];\n    const linkTo = /PH/gi.test(sku) ? \"/\" : `/design/${sku}`;\n    return (\n      <li key={`BTN_${i++}`}>\n        <Link to={linkTo}>\n          <b>{title}</b>\n          <img src={folder + introImg} alt={title} />\n        </Link>\n      </li>\n    );\n  });\n\n  return (\n    <motion.section {...overlayMotion} className=\"Choice\">\n      <img className=\"Logo\" alt=\"Logo\" src=\"img/ux/MMLogo.svg\" />\n      <img className=\"Character\" alt=\"Red MM\" src=\"img/ux/Red.png\" />\n      <div>\n        <h1>Choose what package you want to customize.</h1>\n        {displayProducts && <ul>{displayProducts}</ul>}\n      </div>\n    </motion.section>\n  );\n}\n\nexport default ScreenChoice;\n","import React from \"react\";\nimport html2canvas from \"html2canvas\";\nimport { Link } from \"react-router-dom\";\n\nconst makePNG = () => {\n  var printCanvas = document.getElementsByClassName(\"Canvas\")[0];\n  /*\nvar designCanvas = document.getElementsByClassName(\"Canvas\")[0];\nvar printCanvas = designCanvas.cloneNode(true);\nprintCanvas.style.transform = \"scale(2.5)\";\nprintCanvas.style.position = \"absolute\";\ndocument.body.prepend(printCanvas)\n/* */\n\n  var time = new Date().valueOf();\n  var pngName = `M&M-custom-${time}.png`;\n\n  function renderError(error) {\n    console.log(error);\n  }\n\n  function renderComplete(canvas) {\n    let file = canvas.toDataURL(\"image/png\");\n    var download = document.createElement(\"a\");\n    download.href = file;\n    download.download = pngName;\n    download.click();\n    //printCanvas.remove()\n  }\n\n  html2canvas(printCanvas, {\n    scale: 2,\n    dpi: 150,\n    timeout: 15000,\n    allowTaint: true,\n    backgroundColor: null,\n    letterRendering:true,\n    height: printCanvas.offsetHeight,\n    width: printCanvas.offsetWidth,\n  }).then(renderComplete)\n    .catch(renderError);\n\n  console.log(\"click\");\n};\n\nexport const BtnMakePdf = () => (\n  <div className=\"BTN\" onClick={makePNG}>\n    <b>Save Image</b>\n  </div>\n);\n\nexport const BtnBack = () => (\n  <Link to=\"/\" className=\"BTN\">\n    <b>Back</b>\n  </Link>\n);\n","import React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { overlayMotion } from \"../data/MotionVars\";\nimport products from \"../data/products\";\nimport { BtnBack, BtnMakePdf } from \"./Buttons\";\n\nfunction CheckBox({ name }) {\n  const [Checked, setChecked] = useState(true);\n  const makeVisiable = () => {\n    const designs = document.querySelectorAll(`.${name}`)\n    for (const design of designs) {\n      design.style.display = Checked\n      ? \"none\"\n      : \"block\";\n    }\n        setChecked(!Checked);\n  };\n  return <input type=\"checkbox\" checked={Checked} onChange={makeVisiable} />;\n}\n\nfunction ScreenDesign({ match }) {\n  let chosen = Object.keys(products).find(\n    (x) => products[x].sku === match.params.sku\n  );\n  const { folder, overlay, background, designs, id, fonts, colors } = products[\n    chosen\n  ];\n  const designDiv = Object.keys(designs);\n\n  const [nameInput, setNameInput] = useState(\"Name\");\n  const [currDesign, setCurrDesign] = useState(designDiv[0]);\n  const [currSize, setCurrSize] = useState(45);\n  const [currScale, setScale] = useState(1)\n  const [currFont, setCurrFont] = useState(fonts[0]);\n  const [currColor, setCurrColor] = useState(colors[0]);\n\n  console.log(`${nameInput}_${currDesign}`);\n\n  return (\n    <motion.section {...overlayMotion} className=\"Design\">\n      <div>\n        <div className=\"canvasHolder\">\n          <div className=\"Canvas\" design={currDesign}>\n            <img\n              src={folder + id + background}\n              alt=\"background\"\n              data-html2canvas-ignore\n            />\n            {currDesign &&\n              designs[currDesign].map((i) => (\n                <img\n                  key={\"img-white\" + currDesign + i}\n                  className={currDesign + i}\n                  alt={`Design:${currDesign} number:${i} white background`}\n                  src={`${folder}white/` + currDesign + i + \".png\"}\n                />\n              ))}\n              <div\n              className=\"nameBox nameWhite\"\n              style={{\n                fontFamily: `${currFont}, cursive`,\n                fontSize: `${currSize}px`                \n              }}\n            >\n              <span>{nameInput}</span>\n            </div>\n            {currDesign &&\n              designs[currDesign].map((i) => (\n                <img\n                  key={\"img\" + currDesign + i}\n                  className={currDesign + i}\n                  alt={`Design:${currDesign} number:${i}`}\n                  src={folder + currDesign + i + \".png\"}\n                />\n              ))}\n            <div\n              className=\"nameBox\"\n              style={{\n                fontFamily: `${currFont}, cursive`,\n                fontSize: `${currSize}px`,\n                color: currColor,\n                transform: `scale(${currScale})`\n              }}\n            >\n              <span>{nameInput}</span>\n            </div>\n            <img\n              src={folder + id + overlay}\n              alt=\"overlay\"\n              data-html2canvas-ignore\n            />\n          </div>\n        </div>\n        <div className=\"designs\">\n          {designDiv.map((e, i) => (\n            <div\n              key={e + \" BTN\"}\n              className={e + \" BTN\"}\n              onClick={() => {\n                setCurrDesign(designDiv[i]);\n              }}\n            >\n              <img src={folder + e + \".png\"} alt={`Design id:${e}`} />\n            </div>\n          ))}\n        </div>\n        <div className=\"options\">\n          {currDesign &&\n            designs[currDesign].map((i) => (\n              <div key={\"trimmed_\" + currDesign + i} className=\"BTN\">\n                <label>\n                  <CheckBox name={currDesign + i} />\n                  <img\n                    src={folder + \"trimmed_\" + currDesign + i + \".png\"}\n                    alt={`design id:${currDesign + i}`}\n                  />\n                </label>\n              </div>\n            ))}\n        </div>\n        <div className=\"name\">\n          <div className=\"Input\">\n            <label>Name:</label>\n            <input\n              className=\"textBox\"\n              value={nameInput}\n              onChange={(e) => {\n                setNameInput(e.target.value);\n              }}\n            />\n          </div>\n          <div className=\"Size\">\n            <label>Size:</label>\n            <input\n              /*\n              onChange={(e) => setScale(e.target.value)}\n              type=\"range\"\n              step='0.01'\n              min=\"1.5\"\n              max=\"5.5\"\n              value={currScale}\n              /**/\n              \n              onChange={(e) => setCurrSize(e.target.value)}\n              type=\"range\"\n              min=\"30\"\n              max=\"60\"\n              value={currSize}\n              /**/\n              className=\"slider\"\n              id=\"myRange\"\n            />\n          </div>\n          <div className=\"Style\">\n            <label>Style:</label>\n            <div className=\"fontBtns\">\n              {fonts.map((f, i) => (\n                <div\n                  key={`fontBtn${i}`}\n                  className=\"BTN\"\n                  style={{ fontFamily: `${f}, cursive` }}\n                  onClick={() => setCurrFont(f)}\n                >\n                  Font {i + 1}\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"Color\">\n            <label>Color:</label>\n            <div className=\"fontColor\">\n              {colors.map((f) => (\n                <div\n                  key={`colors${f}`}\n                  className=\"BTN\"\n                  style={{ backgroundColor: f }}\n                  onClick={() => setCurrColor(f)}\n                ></div>\n              ))}\n            </div>\n          </div>\n        </div>\n        <div className=\"buttonHolder\">\n          <BtnBack />\n          <BtnMakePdf fileName={`${nameInput}_${currDesign}`} />\n        </div>\n      </div>\n    </motion.section>\n  );\n}\n\nexport default ScreenDesign;\n","import React from 'react';\nimport { Switch, Route, useLocation } from \"react-router-dom\";\nimport { AnimatePresence } from \"framer-motion\";\nimport ScreenChoice from \"./components/ScreenChoice\"\nimport ScreenDesign from \"./components/ScreenDesign\"\n\nimport './scss/App.scss';\n\nfunction App() {\n  console.clear();\n  var location = useLocation();\n  return (\n    <div className=\"DesignApp\">\n      <div className=\"Screens\">\n        <AnimatePresence exitBeforeEnter>\n          <Switch location={location} key={location.key}>\n              <Route component={ScreenDesign} path='/design/:sku'  exact/>\n              <Route component={ScreenChoice} path=\"/\" exact/>\n          </Switch>\n        </AnimatePresence>\n      </div>\n    </div>\n  );\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter as Router} from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}